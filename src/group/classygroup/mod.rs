//Because we want the accumulator to be secure without trusted setup,
//it must also be the case that in the underlying security assumptions
//the adversary can see the coins used while selecting the concrete module.

//In particular, an accumulator must have a public key divided into two parts,
//one of which (say, the RSA modulus n) is generated by using a public randomness known by the adversary,
//and another one (say, a generator of a large subgroup in Zâˆ—n) can be chosen by using a non-public randomness.

//To use the class group of an imaginary quadratic order.
//One can easily generate an imaginary quadratic order by choosing a random discriminant,
//and when the discriminant is large enough, the order of the class group cannot be computed.

// (Class group setup). For a public setup where we do not want the private key to
// be known by anyone, one could choose G to be the class group of an imaginary quadratic
// field.

mod cgroup;
pub mod create_discriminant;
pub use self::cgroup::ClassyGroup as ClassGroup;
